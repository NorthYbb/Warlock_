/*
 * @Author: warlock.ss 
 * @Date: 2022-01-24 09:11:45 
 * @Last Modified by: warlock.ss
 * @Last Modified time: 2022-01-24 16:28:47
 */

<template>
  <el-table :data="tableArray" class="box-table" default-expand-all>
    <el-table-column type="expand" header-align="left" align="left" fixed>
      <template slot-scope="props">
        <div v-for="(k, _index) in props.row.list" :key="k.id">
          <el-row class="el-row-box">
            <el-col class="col-num">
              <i v-if="k.hasShoreBase">
                <img src="@/assets/new.png" alt />
              </i>
              <span>{{ _index + 1 }}</span>
            </el-col>
            <el-col
              v-for="(j, _jindex) in staticFun(Object.keys(k))"
              :key="_jindex"
              :style="{
                width: defaultStyleArray[_jindex]['width'],
              }"
              :class="hasOperate ? '' : j == 'remark' ? 'hasOperateW' : ''"
            >
              <template v-if="isEditHeaderArray.includes(j) && isEditFlag">
                <el-select
                  v-model="k[j]"
                  filterable
                  placeholder="请选择"
                  :style="{
                    width: '100%',
                  }"
                  v-if="selectionArray.includes(j)"
                >
                  <el-option
                    v-for="item in brandArray"
                    :key="item.id"
                    :label="item.value"
                    :value="item.id"
                  >
                  </el-option>
                </el-select>
                <template v-else>
                  <!-- 整数 -->
                  <el-input
                    v-if="integerArray.includes(j)"
                    v-model="k[j]"
                    v-number-input.float="0"
                    placeholder="请输入内容"
                    @blur="handleInputRow(k[j], k)"
                    :style="{
                      width: '100%',
                    }"
                    :class="k.required ? 'input-color' : ''"
                  ></el-input>
                  <el-input
                    v-else
                    v-model="k[j]"
                    placeholder="请输入内容"
                    :style="{
                      width: '100%',
                    }"
                  ></el-input>
                </template>
              </template>
              <template v-else>
                <span v-if="thousands.includes(j)">{{
                  $fmoney(k[j] * 1)
                }}</span>
                <span
                  @click="handleClickRow(props.row, k)"
                  v-else
                  :title="k[j]"
                  class="over_text"
                  >{{ k[j] }}</span
                >
              </template>
            </el-col>
            <!-- 附件 -->
            <el-col style="text-align: center; width: 70px">
              <template>
                <BaseFileIcon
                  appendixIds="appendixIds"
                  :value="k"
                  :isDisabled="!k.appendixIds"
                  :editable="isEditFlag"
                  :modalTitle="$t('upload.basicInfo')"
                  :number="k.appendixIds"
                />
              </template>
            </el-col>
            <!-- 删除 -->
            <el-col style="text-align: center; width: 80px" v-if="hasOperate">
              <template>
                <span @click="handleDelIcon(props.row.list, k, props.row.id)">
                  <i class="el-icon-delete" style="font-size: 18px"></i>
                </span>
              </template>
            </el-col>
          </el-row>
          <div class="static-box">
            <span
              v-for="(v, _vIndex) in Object.values(k['viceObj'])"
              :key="_vIndex"
            >
              <span>{{ viceData[_vIndex] }}</span
              ><span>{{ v }}</span>
            </span>
          </div>
        </div>
      </template>
    </el-table-column>
    <el-table-column
      v-for="v in lableArray"
      :key="v.label"
      :label="v.label"
      :prop="v.title"
      header-align="left"
      align="left"
      :fixed="v.title == 'title'"
      :width="hasOperate ? v.width : v.title == 'remark' ? '480px' : v.width"
      :render-header="renderHeader"
    />
    <el-table-column
      label="附件"
      fixed="right"
      header-align="center"
      align="center"
      width="70px"
    >
    </el-table-column>
    <el-table-column
      label="操作"
      fixed="right"
      header-align="center"
      align="center"
      width="80px"
      v-if="hasOperate"
    >
      <template slot-scope="scope">
        <span @click="handleDelIcon(tableArray, scope.row)">
          <i class="el-icon-delete" style="font-size: 18px"></i>
        </span>
      </template>
    </el-table-column>
  </el-table>
</template>
<script>
import { EventBus } from 'base-core-lib'
export default {
  props: {
    // 品牌集合
    brandArray: {
      type: Array,
      default() {
        return [
          {
            id: '1',
            value: '黄金糕',
          },
          {
            id: '2',
            value: '双皮奶',
          },
          {
            id: '3',
            value: '蚵仔煎',
          },
        ]
      },
    },
    // 是否显示操作列
    hasOperate: {
      type: Boolean,
      default: true,
    },
    // 审核标识（一级or二级）
    propsAuditFlag: {
      type: [String, Number],
      default: 0,
    },
    // 是否可以编辑
    isEditFlag: {
      type: Boolean,
      default: false,
    },
    // 表格数据
    tableData: {
      type: Array,
      default() {
        return [
          {
            id: '1',
            title: '喜马拉雅山脉--A',
            list: [
              {
                id: '1',
                name1: '喜马拉雅山脉',
                name2: '900*100',
                name3: '喜马拉雅山脉,藏语意为雪的故乡!',
                name4: '座',
                name5: '1',
                applications: '1',
                brandId: '1',
                brandName: '测试1',
                auditsNum: '',
                auditsBrandId: '',
                outsourcingQuantity: '9787547',
                directSupply: '',
                purchaseBrand: '',
                supplier: '',
                purchasePrice: '99974',
                unitPrice: '5454',
                subtotal: '9745487',
                remark:
                  '是东亚大陆与南亚次大陆的天然界山,也是中国与印度、尼泊尔、不丹、巴基斯坦等国的天山。',
                text: '',
                appendixIds: '918149049292996608',
                hasShoreBase: true,
                viceObj: {
                  boundQuantity: '10/0',
                  highestSecurityQuantity: '1/100',
                  signedDate: '2021-09-01/2021-10-01/2021-11-01',
                  signedQuantity: '20/50/54',
                  notSigned: '99',
                },
              },
              {
                id: '2',
                name1: '昆仑虚',
                name2: '800*200',
                name3: '中国第一神山、万祖之山、昆仑丘或玉山!',
                name4: '座',
                name5: '1',
                applications: '2',
                brandId: '2',
                brandName: '测试2',
                auditsNum: '',
                auditsBrandId: '',
                outsourcingQuantity: '98787',
                directSupply: '',
                purchaseBrand: '',
                supplier: '',
                purchasePrice: '3435253',
                unitPrice: '5454',
                subtotal: '5676765466',
                remark: '是亚洲中部大山系,也是中国西部山系的主干。',
                text: '',
                appendixIds: '',
                hasShoreBase: false,
                viceObj: {
                  boundQuantity: '10/0',
                  highestSecurityQuantity: '1/100',
                  signedDate: '2021-09-01/2021-10-01/2021-11-01',
                  signedQuantity: '20/50/54',
                  notSigned: '99',
                },
              },
            ],
          },
          {
            id: '2',
            title: '喜马拉雅山脉--B',
            list: [
              {
                id: '1',
                name1: '喜马拉雅山脉',
                name2: '900*100',
                name3: '喜马拉雅山脉,藏语意为雪的故乡!',
                name4: '座',
                name5: '1',
                applications: '1',
                brandId: '1',
                brandName: '测试1',
                auditsNum: '',
                auditsBrandId: '',
                outsourcingQuantity: '9787547',
                directSupply: '',
                purchaseBrand: '',
                supplier: '',
                purchasePrice: '99974',
                unitPrice: '5454',
                subtotal: '9745487',
                remark:
                  '是东亚大陆与南亚次大陆的天然界山,也是中国与印度、尼泊尔、不丹、巴基斯坦等国的天山。',
                text: '',
                appendixIds: '918149049292996608',
                hasShoreBase: true,
                viceObj: {
                  boundQuantity: '10/0',
                  highestSecurityQuantity: '1/100',
                  signedDate: '2021-09-01/2021-10-01/2021-11-01',
                  signedQuantity: '20/50/54',
                  notSigned: '99',
                },
              },
              {
                id: '2',
                name1: '昆仑虚',
                name2: '800*200',
                name3: '中国第一神山、万祖之山、昆仑丘或玉山!',
                name4: '座',
                name5: '1',
                applications: '2',
                brandId: '2',
                brandName: '测试2',
                auditsNum: '',
                auditsBrandId: '',
                outsourcingQuantity: '98787',
                directSupply: '',
                purchaseBrand: '',
                supplier: '',
                purchasePrice: '3435253',
                unitPrice: '5454',
                subtotal: '5676765466',
                remark: '是亚洲中部大山系,也是中国西部山系的主干。',
                text: '',
                appendixIds: '',
                hasShoreBase: false,
                viceObj: {
                  boundQuantity: '10/0',
                  highestSecurityQuantity: '1/100',
                  signedDate: '2021-09-01/2021-10-01/2021-11-01',
                  signedQuantity: '20/50/54',
                  notSigned: '99',
                },
              },
            ],
          },
        ]
      },
    },
    // 表头数据
    lableData: {
      type: Array,
      default() {
        return [
          {
            label: '物料名称',
            title: 'title',
            width: '200px',
          },
          {
            label: '规格',
            width: '250px',
          },
          {
            label: '说明',
            width: '350px',
          },
          {
            label: '单位',
            width: '50px',
          },
          {
            label: '岸基库存',
            width: '100px',
          },
          {
            label: '申请数量',
            title: 'required',
            width: '100px',
          },
          {
            label: '申请品牌',
            width: '150px',
          },

          {
            label: '备注',
            title: 'remark',
            width: '450px',
          },
        ]
      },
    },
    // 表格宽度集合
    defaultStyleData: {
      type: Array,
      default() {
        return [
          {
            width: '200px',
            name: 'name1',
          },
          {
            width: '250px',
            name: 'name2',
          },
          {
            width: '350px',
            name: 'name3',
          },
          {
            width: '50px',
            name: 'name4',
          },
          {
            width: '100px',
            name: 'name5',
          },
          {
            width: '100px',
            name: 'applications',
          },
          {
            width: '150px',
            name: 'brandName',
          },
          {
            width: '450px',
            name: 'remark',
          },
        ]
      },
    },
    viceData: {
      type: Array,
      default() {
        return [
          '近一年入/出库数量:',
          '安全/最高库存:',
          '近3次签收时间::',
          '近3次签收数量:',
          '未签收数量:',
        ]
      },
    },
    // input入力- 整数
    integerData: {
      type: Array,
      default() {
        return ['applications', 'outsourcingQuantity']
      },
    },
    // 固定静态展示项
    staticData: {
      type: Array,
      default() {
        return [
          'name1',
          'name2',
          'name3',
          'name4',
          'name5',
          'applications',
          'brandName',
          'remark',
        ]
      },
    },
    // 可编辑表头集合
    isEditHeaderData: {
      type: Array,
      default() {
        return ['applications', 'brandName', 'remark']
      },
    },
    // 下拉表头集合
    selectionArray: {
      type: Array,
      default() {
        return ['brandName', 'auditsBrandId']
      },
    },
    // 千分符
    thousands: {
      type: Array,
      default() {
        return ['purchasePrice', 'unitPrice', 'subtotal']
      },
    },
  },
  computed: {
    staticFun() {
      return function (val) {
        return this.staticArray.filter((item) => val.includes(item))
      }
    },
  },

  watch: {
    tableData: {
      handler(newVal, oldVal) {
        this.tableArray = newVal
      },
      immediate: true,
      deep: true,
    },
    lableData: {
      handler(newVal, oldVal) {
        this.lableArray = newVal
      },
      immediate: true,
      deep: true,
    },
    defaultStyleData: {
      handler(newVal, oldVal) {
        this.defaultStyleArray = newVal
      },
      immediate: true,
      deep: true,
    },
    staticData: {
      handler(newVal, oldVal) {
        this.staticArray = newVal
      },
      immediate: true,
      deep: true,
    },
    isEditHeaderData: {
      handler(newVal, oldVal) {
        this.isEditHeaderArray = newVal
      },
      immediate: true,
      deep: true,
    },
    integerData: {
      handler(newVal, oldVal) {
        this.integerArray = newVal
      },
      immediate: true,
      deep: true,
    },

    propsAuditFlag: {
      handler(newVal, oldVal) {
        // 一级审核 需要显示 审批数量 auditsNum 审批品牌 auditsBrandId
        // isEditHeaderArray staticArray integerArray defaultStyleArray lableArray
        if (newVal == 1) {
          this.isEditHeaderArray = ['auditsNum', 'auditsBrandId', 'remark']
          this.staticArray.splice(7, 0, 'auditsNum', 'auditsBrandId')
          this.integerArray.push('auditsNum')
          this.defaultStyleArray.splice(
            7,
            0,
            {
              width: '100px',
              name: 'auditsNum',
              auditFlag: '1',
            },
            {
              width: '150px',
              name: 'auditsBrandId',
              auditFlag: '1',
            }
          )
          this.lableArray.splice(
            7,
            0,
            {
              label: '审核数量',
              title: 'required',
              auditFlag: '1',
              width: '100px',
            },
            {
              label: '审核品牌',
              title: 'required',
              auditFlag: '1',
              width: '150px',
            }
          )
          this.lableArray.splice(5, 1, { label: '申请数量', width: '100px' })
        } else if (newVal == 2) {
          // 二级审核 需要显示 审批数量 审批品牌 岸基直接供船数量 采办品牌 供应商 平均采办单价 单价（元）小计（元）
          this.isEditHeaderArray = ['outsourcingQuantity']
          this.staticArray.splice(
            7,
            0,
            'auditsNum',
            'auditsBrandId',
            'outsourcingQuantity',
            'directSupply',
            'purchaseBrand',
            'supplier',
            'purchasePrice',
            'unitPrice',
            'subtotal'
          )
          this.defaultStyleArray.splice(
            7,
            0,
            {
              width: '100px',
              name: 'auditsNum',
              auditFlag: '1',
            },
            {
              width: '150px',
              name: 'auditsBrandId',
              auditFlag: '1',
            },
            {
              label: '外采数量',
              title: 'required',
              auditFlag: '2',
              width: '100px',
            },
            {
              label: '岸基直接供船数量',
              auditFlag: '2',
              width: '150px',
            },
            {
              label: '采办品牌',
              auditFlag: '2',
              width: '100px',
            },
            {
              label: '供应商',
              auditFlag: '2',
              width: '200px',
            },
            {
              label: '平均采办单价',
              auditFlag: '2',
              width: '150px',
            },
            {
              label: '单价(元)',
              auditFlag: '2',
              width: '100px',
            },
            {
              label: '小计(元)',
              auditFlag: '2',
              width: '100px',
            }
          )
          this.lableArray.splice(
            7,
            0,
            {
              label: '审核数量',
              auditFlag: '1',
              width: '100px',
            },
            {
              label: '审核品牌',
              auditFlag: '1',
              width: '150px',
            },
            {
              label: '外采数量',
              title: 'required',
              auditFlag: '2',
              width: '100px',
            },
            {
              label: '岸基直接供船数量',
              auditFlag: '2',
              width: '150px',
            },
            {
              label: '采办品牌',
              auditFlag: '2',
              width: '100px',
            },
            {
              label: '供应商',
              auditFlag: '2',
              width: '200px',
            },
            {
              label: '平均采办单价',
              auditFlag: '2',
              width: '150px',
            },
            {
              label: '单价(元)',
              auditFlag: '2',
              width: '100px',
            },
            {
              label: '小计(元)',
              auditFlag: '2',
              width: '100px',
            }
          )
          this.lableArray.splice(5, 1, { label: '申请数量', width: '100px' })
        }
      },
      immediate: true,
      deep: true,
    },
  },
  data() {
    return {
      tableArray: [],
      lableArray: [],
      defaultStyleArray: [],
      staticArray: [],
      isEditHeaderArray: [],
      integerArray: [],
    }
  },
  created() {},
  methods: {
    renderHeader(h, { column }) {
      if (column.property === 'required' && this.isEditFlag) {
        return h('span', [
          h('i', {
            class: 'el-icon-star-on',
            style: 'color: #f91717',
          }),
          h('span', column.label),
        ])
      } else {
        return h('span', [h('span', column.label)])
      }
    },
    handleClickRow(row, k) {
      console.log('aa', row, k)
    },
    handleInputRow(row, k) {
      if (!row) {
        this.$set(k, 'required', true)
        EventBus.$emit('warning', this.$t('请正确填入申请数量!'))
        return
      } else {
        this.$set(k, 'required', false)
      }
    },

    handleDelIcon(item, val, key) {
      let _parentText = '此操作将永久删除设备分类文件, 是否继续?',
        _childText = '此操作将永久删除子文件, 是否继续?'
      this.$confirm(key ? _childText : _parentText, '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning',
      })
        .then(() => {
          let _index = item.findIndex((i) => {
            if (i.id === val.id) {
              return true
            }
          })
          item.splice(_index, 1)
          if (key && item == false) {
            this.tableArray = this.tableArray.filter((h) => {
              return h.id !== key
            })
          }
          EventBus.$emit('success', this.$t('删除成功!'))
        })
        .catch(() => {})
    },
    handleAddToData(arry) {
      // arry 为上层级 传递过来的添加数组
      let _arry = [
        {
          id: '',
          title: '分类名称--newly',
          list: [
            {
              id: '1',
              name1: '喜马拉雅山脉',
              name2: '900*100',
              name3: '喜马拉雅山脉,藏语意为雪的故乡!',
              name4: '座',
              name5: '1',
              applications: '1',
              brandId: '1',
              brandName: '测试ADD',
              auditsNum: '',
              auditsBrandId: '',
              outsourcingQuantity: '9787547',
              directSupply: '',
              purchaseBrand: '',
              supplier: '',
              purchasePrice: '99974',
              unitPrice: '5454',
              subtotal: '9745487',
              remark:
                '是东亚大陆与南亚次大陆的天然界山,也是中国与印度、尼泊尔、不丹、巴基斯坦等国的天山。',
              text: '',
              appendixIds: '',
              hasShoreBase: true,
              viceObj: {
                boundQuantity: '10/0',
                highestSecurityQuantity: '1/100',
                signedDate: '2021-09-01/2021-10-01/2021-11-01',
                signedQuantity: '20/50/54',
                notSigned: '99',
              },
            },
          ],
        },
      ]
      this.tableArray.unshift(..._arry)
    },
    handleSave() {
      let _verifyData = []
      this.tableArray.map((v) => {
        _verifyData.push(...v.list)
      })

      if (
        _verifyData.some((s) => {
          return s.required
        })
      ) {
        EventBus.$emit('error', this.$t('请正确填入申请数量!'))
        return
      }
      console.log('>>>', this.tableArray)
      return this.tableArray
    },
  },
}
</script>

<style scoped lang="scss">
.box-table {
  width: 100%;
  border: 1px solid #ccc;
  /deep/.el-table__header-wrapper {
    tr > th {
      border-right: 1px solid #ccc;
    }
  }
  /deep/.el-table__body-wrapper {
    tr.expanded > td {
      background: #e2edfa;
    }
  }
  /deep/.el-table__fixed {
    tr.expanded > td {
      background: #e2edfa;
    }
  }
  /deep/.el-table__fixed-right {
    tr.expanded > td {
      background: #e2edfa;
    }
  }
}
.el-row-box {
  display: flex;
  text-align: left;
  height: 40px;
  align-items: center;
  border-bottom: 1px solid #ccc;
  .col-num {
    position: relative;
    border-left: none;
    width: 47px;
    text-align: center;
    padding: 0;
    > i {
      position: absolute;
      left: 0;
      width: 0;
      height: 0;
    }
  }
  > div {
    padding: 0 5px;
    height: 40px;
    line-height: 40px;
    border-left: 1px solid #ccc;
    width: 150px;
  }
  .hasOperateW {
    width: 480px !important;
  }
  .over_text {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    display: inline-block;
    width: 100%;
  }
  .input-color {
    /deep/.el-input__inner {
      border: 1px solid #ff0000;
    }
  }
}
.static-box {
  display: flex;
  justify-content: space-between;
  padding-left: 1rem;
  height: 40px;
  line-height: 40px;
  background-color: rgba(242, 242, 242, 1);
  span:last-child {
    flex: 0.5;
  }
}
</style>
