<!--
 * @Descripttion: 
 * @Author: _Shiyuan.Liu
 * @Date: 2020-05-16 09:10:02
 * @LastEditors: _Shiyuan.Liu
 * @LastEditTime: 2020-05-16 13:48:00
--> 
<template>
  <div class="cont-main m-10">
    <ws-normal-table :data="skuListInfo" :span-method="objectSpanMethod" border>
      <!-- 序号 -->
      <!-- <el-table-column align="center" :label="$t('commonNewest.num')" width="50" type="index" :index="indexMethod" :show-overflow-tooltip="false" fixed="left"/> -->
      <!-- 名称 -->
        <el-table-column prop="name" label="名称" width="50" fixed="left" align="center">
        </el-table-column>
        <!-- 合同编号 -->
        <el-table-column prop="countNo" label="合同编号" width="100" fixed="left" align="center">
        </el-table-column>
        <!-- 租约类型 -->
        <el-table-column prop="storeIds" label="租约类型" width="100" fixed="left" align="center">
        </el-table-column>
        <!-- 航次   可更加 航次号相同来 设定feeType 的值 航次号相同的 feeType值相同--> 
        <el-table-column prop="feeTypeInfo" label="航次" width="100" fixed="left" align="center">
        </el-table-column>
        <!-- 交船港 -->
        <el-table-column prop="delivery" label="交船港" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.delivery | empty">
              {{ scope.row.delivery | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 交船/航次开始时间（GMT） -->
        <el-table-column prop="voyageStart" label="交船/航次开始时间（GMT）" width="150" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.voyageStart | empty">
              {{ scope.row.voyageStart | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 装港 -->
        <el-table-column prop="loadPort" label="装港" width="150" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.loadPort | empty">
              {{ scope.row.loadPort | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 卸港 -->
        <el-table-column prop="dischargePort" label="卸港" width="150" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.dischargePort | empty">
              {{ scope.row.dischargePort | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 还船港 -->
        <el-table-column prop="redeliveryPort" label="还船港" width="150" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.redeliveryPort | empty">
              {{ scope.row.redeliveryPort | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 还船/航次结束时间(GMT） -->
        <el-table-column prop="voyageEnd" label="还船/航次结束时间(GMT）" width="150" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.voyageEnd | empty">
              {{ scope.row.voyageEnd | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 货物 -->
        <el-table-column prop="goods" label="货物" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.goods | empty">
              {{ scope.row.goods | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 货量（吨） -->
        <el-table-column prop="volume" label="货量（吨）" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.volume | empty">
              {{ scope.row.volume | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 日租金 -->
        <el-table-column prop="productInfo" label="日租金" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.productInfo | empty">
              {{ scope.row.productInfo | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 运价 -->
        <el-table-column prop="rate" label="运价" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.rate | empty">
              {{ scope.row.rate | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 经营时间（天） -->
        <el-table-column prop="dataTes" label="经营时间（天）" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.dataTes | empty">
              {{ scope.row.dataTes | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 运费/租金合计 -->
        <el-table-column prop="rent" label="运费/租金合计" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.rent | empty">
              {{ scope.row.rent | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 收入合计 -->
        <el-table-column prop="revenue" label="收入合计" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.revenue | empty">
              {{ scope.row.revenue | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 币种 -->
        <el-table-column prop="curry" label="币种" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.curry | empty">
              {{ scope.row.curry | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 船东 -->
        <el-table-column prop="billing" label="船东" width="300" align="left" header-align="center">
          <template slot-scope="scope">
            <span :title="scope.row.billing | empty">
              {{ scope.row.billing | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 租家 -->
        <el-table-column prop="boatman" label="租家" width="300" align="left" header-align="center">
          <template slot-scope="scope">
            <span :title="scope.row.boatman | empty">
              {{ scope.row.boatman | empty }}
            </span>
          </template>
        </el-table-column>
        <!-- 经纪人 -->
        <el-table-column prop="agent" label="经纪人" width="100" align="center">
          <template slot-scope="scope">
            <span :title="scope.row.agent | empty">
              {{ scope.row.agent | empty }}
            </span>
          </template>
        </el-table-column>
      </ws-normal-table>
  </div>
</template>
<script>
export default {
  name: 'analysis',
  filters: {
      empty(value) {
        let empt = ''
        if (!value) { empt = '--' } else { empt = value } return empt
      }
    },
  computed:{
    groupNum(){  //获取分组数据
      return new Set(this.result.map(o => o.vesselCont));
    },
  },
  data () {
    return {
      loading: false,
      skuListInfo: [
          {
            id: 1,
            name: '嘉玺',
            storeIds: '外贸期租',
            countNo: 'JX-2019-014',
            storeIdInfo: 'testInfo',
            productInfo: '53,500.00',
            feeType: '1',
            feeTypeInfo: '1909',
            billing: '深圳能源运输有限公司',
            boatman: '',
            agent: '',
            curry: '美元',
            rate: '',
            dataTes : '90.000000',
            revenue: '83,458.00',
            rent: '73,458.00',
            delivery: "QingDao",
            voyageStart: '2019-03-01 10:05',
            loadPort: '天津港',
            dischargePort: 'Shen Zhen',
            redeliveryPort: '',
            voyageEnd: '2019-05-15 15:21',
            goods: '煤炭',
            volume: '12,020.00'
          },
          {
            id: 2,
            name: '嘉玺',
            storeIds: '外贸期租',
            countNo: 'JX-2019-014',
            storeIdInfo: 'testInfo',
            productInfo: '79,500.00',
            feeType: '1',
            feeTypeInfo: '1908',
            billing: '深圳能源运输有限公司',
            boatman: '',
            agent: '',
            curry: '美元',
            rate: '',
            dataTes : '97.881944',
            revenue: '83,458.00',
            rent: '73,458.00',
            delivery: "QingDao",
            voyageStart: '2019-03-01 10:05',
            loadPort: '天津港',
            dischargePort: 'Shen Zhen',
            redeliveryPort: '',
            voyageEnd: '2019-05-15 15:21',
            goods: '煤炭',
            volume: '12,020.00'
          },
          {
            id: 9,
            name: '嘉玺',
            storeIds: '外贸期租',
            countNo: 'JX-2019-014',
            storeIdInfo: 'testInfo',
            productInfo: '63,900.00',
            feeType: '2',
            feeTypeInfo: '1912',
            billing: '深圳能源运输有限公司',
            boatman: '',
            agent: '',
            curry: '美元',
            rate: '',
            dataTes : '60.123587',
            revenue: '83,458.00',
            rent: '73,458.00',
            delivery: "",
            voyageStart: '2019-05-01 10:05',
            loadPort: '南沙港',
            dischargePort: '汕头海门',
            redeliveryPort: 'GuangZhou',
            voyageEnd: '2019-06-02 07:16',
            goods: '铁矿石',
            volume: '99,900.00'
          },
          {
            id: 9,
            name: '嘉玺',
            storeIds: '外贸期租',
            countNo: 'JX-2019-014',
            storeIdInfo: 'testInfo',
            productInfo: '63,900.00',
            feeType: '3',
            feeTypeInfo: '99652',
            billing: '深圳能源运输有限公司',
            boatman: '',
            agent: '',
            curry: '美元',
            rate: '',
            dataTes : '60.123587',
            revenue: '83,458.00',
            rent: '73,458.00',
            delivery: "Qin Zhou",
            voyageStart: '2019-06-01 10:05',
            loadPort: '北区港',
            dischargePort: '',
            redeliveryPort: 'Tai Chung',
            voyageEnd: '2019-09-05 07:15',
            goods: '煤炭',
            volume: '63,900.00'
          },
          {
            id: 8,
            name: '嘉泰',
            storeIds: '内贸程租',
            countNo: 'CZ-00125',
            storeIdInfo: 'testInfo',
            productInfo: '71,200.00',
            feeType: '1',
            feeTypeInfo: '1911',
            billing: '',
            boatman: '',
            agent: '',
            curry: '欧元',
            rate: '',
            dataTes : '187.881944',
            revenue: '',
            rent: '62,584.33',
            delivery: "Qin Zhou",
            voyageStart: '',
            loadPort: '',
            dischargePort: 'Shen Zhen',
            redeliveryPort: 'GuangZhou',
            voyageEnd: '2019-09-05 07:15',
            goods: '煤炭',
            volume: '63,900.00'
          },
          {
            id: 5,
            name: '嘉安',
            storeIds: '外贸期租',
            countNo: 'NMJFD-988',
            storeIdInfo: 'testInfo',
            productInfo: '63,560.00',
            feeType: '1',
            feeTypeInfo: '1908',
            billing: '大连海港',
            boatman: 'CHINA COAL SOLUTION CHARTERING PRIVATE LIMITED',
            agent: 'DL YingHai',
            curry: '美元',
            rate: '6.66',
            dataTes : '60.068730',
            revenue: '',
            rent: '99,584.33',
            delivery: "",
            voyageStart: '2019-09-01 10:05',
            loadPort: '青岛港',
            dischargePort: 'Shen Zhen',
            redeliveryPort: 'GuangZhou',
            voyageEnd: '2019-03-05 10:15',
            goods: '煤炭',
            volume: ''
          },
          {
            id: 6,
            name: '嘉安',
            storeIds: '外贸期租',
            countNo: 'NMJFD-988',
            storeIdInfo: 'testInfo',
            productInfo: '99,560.00',
            feeType: '2',
            feeTypeInfo: '1906',
            billing: '大连海港',
            boatman: 'CHINA COAL SOLUTION CHARTERING PRIVATE LIMITED',
            agent: 'DL YingHai',
            curry: '美元',
            rate: '11.66',
            dataTes : '22.123546',
            revenue: '',
            rent: '99,584.33',
            delivery: "",
            voyageStart: '2019-10-01 10:05',
            loadPort: '',
            dischargePort: 'Tai Chung',
            redeliveryPort: '',
            voyageEnd: '2019-11-05 10:15',
            goods: '煤炭',
            volume: '21,650.00'
          },
          {
            id: 7,
            name: '嘉安',
            storeIds: '外贸期租',
            countNo: 'NMJFD-988',
            storeIdInfo: 'testInfo',
            productInfo: '77,560.00',
            feeType: '2',
            feeTypeInfo: '1911',
            billing: '大连海港',
            boatman: 'CHINA COAL SOLUTION CHARTERING PRIVATE LIMITED',
            agent: 'DL YingHai',
            curry: '美元',
            rate: '11.66',
            dataTes : '38.789620',
            revenue: '',
            rent: '99,584.33',
            delivery: "",
            voyageStart: '2019-11-01 10:05',
            loadPort: '',
            dischargePort: 'Tai Chung',
            redeliveryPort: '',
            voyageEnd: '2019-11-05 10:15',
            goods: '煤炭',
            volume: '21,650.00'
          },
          {
            id: 8,
            name: '嘉畅',
            storeIds: '内贸程租',
            countNo: 'WPPP-00125',
            storeIdInfo: 'testInfo',
            productInfo: '13,560.00',
            feeType: '1',
            feeTypeInfo: '1907',
            billing: '',
            boatman: '',
            agent: '',
            curry: '元',
            rate: '',
            dataTes : '90.000000',
            revenue: '',
            rent: '',
            delivery: "QingDao",
            voyageStart: '',
            loadPort: '威海港',
            dischargePort: '汕头海门',
            redeliveryPort: 'GuangZhou',
            voyageEnd: '',
            goods: '煤炭',
            volume: '71,650.00'
          },
        ],
      typeNameArr: [],  // 第一列进行合并操作时存放的数组变量
      typeNamePos: 0, // 上面的数组的下标值
      storeArr: [],  // 第二列进行合并操作时存放的数组变量
      storePos: 0,// 上面的数组的下标值
      feeArr: [], // 第三列进行合并操作时存放的数组变量
      feePos: 0,// 上面的数组的下标值
      indexList: []
    }
  },
  mounted() {
      this.merage();
    },
  
  methods: {
    merageInit() {
        this.typeNameArr = [];
        this.typeNamePos = 0;
        this.storeArr = [];
        this.storePos = 0;
        this.feeArr = [];
        this.feePos = 0;


        this.indexList = [];
        let dataList = _.groupBy(this.annuals,"name");
        for (let i in dataList) {
          this.indexList.push(i);
        }
      },
      merage() {
        this.merageInit();
        for (let i = 0; i < this.skuListInfo.length; i += 1) {
          if (i === 0) {
            // 第一行必须存在
            this.typeNameArr.push(1);
            this.typeNamePos = 0;
            this.storeArr.push(1);
            this.storePos = 0;
            this.feeArr.push(1);
            this.feePos = 0;
          } else {
            // 判断当前元素与上一个元素是否相同,eg：this.typeNamePos 是 this.typeNameArr序号
            // 第一列
            if (this.skuListInfo[i].name === this.skuListInfo[i - 1].name) {
              this.typeNameArr[this.typeNamePos] += 1;
              this.typeNameArr.push(0);
            } else {
              this.typeNameArr.push(1);
              this.typeNamePos = i;
            }
            if (this.skuListInfo[i].storeIdInfo === this.skuListInfo[i - 1].storeIdInfo && this.skuListInfo[i].name ===
              this.skuListInfo[i - 1].name) {
              this.storeArr[this.storePos] += 1;
              this.storeArr.push(0);
            } else {
              this.storeArr.push(1);
              this.storePos = i;
            }
            if (this.skuListInfo[i].feeType === this.skuListInfo[i - 1].feeType && this.skuListInfo[i].storeIdInfo
              === this.skuListInfo[i - 1].storeIdInfo && this.skuListInfo[i].name ===
              this.skuListInfo[i - 1].name) {
              this.feeArr[this.feePos] += 1;
              this.feeArr.push(0);
            } else {
              this.feeArr.push(1);
              this.feePos = i;
            }
          }
        }
      },
      // 序号生成
    indexMethod(index) {
      let row = this.skuListInfo[index];
      return (_.findIndex(this.indexList, item => item === row.name) + 1);
    },
      objectSpanMethod({ row, column, rowIndex, columnIndex }) {
        if (columnIndex === 0) {
          // 第一列的合并方法
          const row1 = this.typeNameArr[rowIndex];
          const col1 = row1 > 0 ? 1 : 0; // 如果被合并了row = 0; 则他这个列需要取消
          return {
            rowspan: row1,
            colspan: col1,
          };
        } else if (
            columnIndex === 1 || 
            columnIndex === 2 || 
            columnIndex === 14 ||
            columnIndex === 15 || 
            columnIndex === 16 || 
            columnIndex === 17 ||
            columnIndex === 18 ||
            columnIndex === 19 ||
            columnIndex === 20
          ) {
          // 第二列的合并方法
          const row2 = this.storeArr[rowIndex];
          const col2 = row2 > 0 ? 1 : 0; // 如果被合并了row = 0; 则他这个列需要取消
          return {
            rowspan: row2,
            colspan: col2,
          };
        } else if (
            columnIndex === 3 || 
            columnIndex === 4 || 
            columnIndex === 5 || 
            columnIndex === 6 || 
            columnIndex === 7 || 
            columnIndex === 8 ||
            columnIndex === 9 ||
            columnIndex === 10 ||
            columnIndex === 11
          ) {
          // 第三列的合并方法
          const row3 = this.feeArr[rowIndex];
          const col3 = row3 > 0 ? 1 : 0; // 如果被合并了row = 0; 则他这个列需要取消
          return {
            rowspan: row3,
            colspan: col3,
          };
        }
      },
  }
}
</script>
<style lang="scss" scoped>
  /deep/ .el-table__row:hover > td{
    background-color: transparent !important;
  }
  /deep/ .el-table__body tr.hover-row > td{
    background-color: transparent !important;
  }
</style>
